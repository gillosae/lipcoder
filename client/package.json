{
  "name": "client",
  "version": "1.0.0",
  "main": "../dist/client/extension.js",
  "activationEvents": [
    "onLanguage:javascript",
    "onLanguage:typescript",
    "onLanguage:python"
  ],
  "contributes": {
    "languages": [
      {
        "id": "javascript",
        "aliases": [
          "JavaScript",
          "javascript"
        ],
        "extensions": [
          ".js",
          ".jsx"
        ]
      },
      {
        "id": "typescript",
        "aliases": [
          "TypeScript",
          "typescript"
        ],
        "extensions": [
          ".ts",
          ".tsx"
        ]
      },
      {
        "id": "python",
        "aliases": [
          "Python",
          "python"
        ],
        "extensions": [
          ".py"
        ]
      }
    ],
    "keybindings": [
      {
        "key": "enter",
        "command": "editor.action.inlineSuggest.commit",
        "when": "inlineSuggestionVisible"
      },
      {
        "key": "shift+enter",
        "command": "editor.action.inlineSuggest.hide",
        "when": "inlineSuggestionVisible"
      },
      {
        "key": "ctrl+shift+a",
        "command": "lipcoder.toggleASRRecording",
        "when": "editorTextFocus"
      },
      {
        "key": "ctrl+shift+r",
        "command": "lipcoder.startRecording",
        "when": "editorTextFocus"
      },
      {
        "key": "ctrl+shift+r",
        "command": "lipcoder.stopRecording",
        "when": "editorTextFocus"
      }
    ],
    "configuration": {
      "title": "LipCoder",
      "properties": {
        "lipcoder.openaiApiKey": {
          "type": "string",
          "default": "",
          "description": "Your OpenAI API key for ChatGPT completions and GPT-4o transcription."
        },
        "lipcoder.asrBackend": {
          "type": "string",
          "enum": ["silero", "gpt4o-transcribe"],
          "default": "gpt4o-transcribe",
          "description": "ASR backend to use for speech recognition. GPT-4o backend uses Whisper for reliable transcription and requires an API key."
        },
        "lipcoder.gpt4oModel": {
          "type": "string",
          "default": "whisper-1",
          "description": "Whisper model to use for transcription."
        }
      }
    },
    "commands": [
      {
        "command": "lipcoder.startASRStreaming",
        "title": "Start ASR Streaming",
        "category": "LipCoder"
      },
      {
        "command": "lipcoder.stopASRStreaming",
        "title": "Stop ASR Streaming",
        "category": "LipCoder"
      },
      {
        "command": "lipcoder.toggleASRStreaming",
        "title": "Toggle ASR Streaming",
        "category": "LipCoder"
      },
      {
        "command": "lipcoder.toggleASR",
        "title": "Toggle ASR",
        "category": "LipCoder"
      },
      {
        "command": "lipcoder.showASROutput",
        "title": "Show ASR Output",
        "category": "LipCoder"
      },
      {
        "command": "lipcoder.clearASROutput",
        "title": "Clear ASR Output",
        "category": "LipCoder"
      },
      {
        "command": "lipcoder.getASRStatus",
        "title": "Get ASR Status",
        "category": "LipCoder"
      },
      {
        "command": "lipcoder.openASRTestPage",
        "title": "Open ASR Test Page",
        "category": "LipCoder"
      },
      {
        "command": "lipcoder.testASRServer",
        "title": "Test ASR Server",
        "category": "LipCoder"
      },
      {
        "command": "lipcoder.testTranscription",
        "title": "Test Transcription",
        "category": "LipCoder"
      },
      {
        "command": "lipcoder.simulateAudioProcessing",
        "title": "Simulate Audio Processing",
        "category": "LipCoder"
      },
      {
        "command": "lipcoder.pushToTalkASR",
        "title": "Push-to-Talk ASR",
        "category": "LipCoder"
      },
      {
        "command": "lipcoder.startRecording",
        "title": "Start Recording",
        "category": "LipCoder"
      },
      {
        "command": "lipcoder.stopRecording",
        "title": "Stop Recording",
        "category": "LipCoder"
      },
      {
        "command": "lipcoder.showPushToTalkOutput",
        "title": "Show Push-to-Talk Output",
        "category": "LipCoder"
      },
      {
        "command": "lipcoder.clearPushToTalkOutput",
        "title": "Clear Push-to-Talk Output",
        "category": "LipCoder"
      },
      {
        "command": "lipcoder.getPushToTalkStatus",
        "title": "Get Push-to-Talk Status",
        "category": "LipCoder"
      },
      {
        "command": "lipcoder.openPushToTalkTestPage",
        "title": "Open Push-to-Talk Test Page",
        "category": "LipCoder"
      },
      {
        "command": "lipcoder.setPlaySpeed",
        "title": "Set Playback Speed",
        "category": "LipCoder"
      },
      {
        "command": "lipcoder.setPlaySpeedSlow",
        "title": "Set Playback Speed: Slow (0.8×)",
        "category": "LipCoder"
      },
      {
        "command": "lipcoder.setPlaySpeedNormal",
        "title": "Set Playback Speed: Normal (1.0×)",
        "category": "LipCoder"
      },
      {
        "command": "lipcoder.setPlaySpeedFast",
        "title": "Set Playback Speed: Fast (1.5×)",
        "category": "LipCoder"
      },
      {
        "command": "lipcoder.setPlaySpeedVeryFast",
        "title": "Set Playback Speed: Very Fast (2.0×)",
        "category": "LipCoder"
      },
      {
        "command": "lipcoder.togglePitchPreservation",
        "title": "Toggle Pitch Preservation",
        "category": "LipCoder"
      },
      {
        "command": "lipcoder.startASRRecording",
        "title": "Start ASR Recording",
        "category": "LipCoder"
      },
      {
        "command": "lipcoder.stopASRRecording",
        "title": "Stop ASR Recording",
        "category": "LipCoder"
      },
      {
        "command": "lipcoder.toggleASRRecording",
        "title": "Toggle ASR Recording",
        "category": "LipCoder"
      },
      {
        "command": "lipcoder.switchASRBackend",
        "title": "Switch ASR Backend",
        "category": "LipCoder"
      },
      {
        "command": "lipcoder.showEnhancedASROutput",
        "title": "Show Enhanced ASR Output",
        "category": "LipCoder"
      },
      {
        "command": "lipcoder.clearEnhancedASROutput",
        "title": "Clear Enhanced ASR Output",
        "category": "LipCoder"
      },
      {
        "command": "lipcoder.showASRPopup",
        "title": "Show ASR Recording Popup",
        "category": "LipCoder"
      },
      {
        "command": "lipcoder.showCommandPatterns",
        "title": "Show Available Voice Command Patterns",
        "category": "LipCoder"
      },
      {
        "command": "lipcoder.toggleCommandRouter",
        "title": "Toggle Voice Command Router",
        "category": "LipCoder"
      },
      {
        "command": "lipcoder.addCustomCommandPattern",
        "title": "Add Custom Voice Command Pattern",
        "category": "LipCoder"
      },
      {
        "command": "lipcoder.toggleLLMMatching",
        "title": "Toggle LLM Command Matching",
        "category": "LipCoder"
      }
    ]
  },
  "files": [
    "dist/**",
    "audio/**",
    "client/audio/**"
  ],
  "scripts": {
    "test": "echo \"Error: no test specified\" && exit 1",
    "build": "tsc -b ."
  },
  "keywords": [],
  "author": "",
  "license": "ISC",
  "description": "",
  "dependencies": {
    "diff": "^8.0.2",
    "form-data": "^4.0.4",
    "node-fetch": "^2.7.0",
    "node-microphone": "^0.1.6",
    "node-pty": "^1.0.0",
    "openai": "^4.3.0",
    "vscode-languageclient": "^9.0.1"
  },
  "devDependencies": {
    "@electron/rebuild": "^4.0.1",
    "@types/wav": "^1.0.4",
    "electron": "^34.2.0",
    "electron-rebuild": "^3.2.9"
  }
}
